#!/bin/bash 

# exit if a command fails
set -e

if [ -z "$O5G_INSTALL_PATH" ]; then
  O5G_INSTALL_PATH="/workspace/examples"
  printf "Installing to ${O5G_INSTALL_PATH}, set O5G_INSTALL_PATH to overwrite"
fi

source "${O5G_INSTALL_PATH}/digital_twins/o5g/config"

printf "Compiling fmu from OpenModelica model \n"

cd "${O5G_INSTALL_PATH}/models"
omc "${O5G_INSTALL_PATH}/models/makefmu.mos"

chmod +x "${O5G_INSTALL_PATH}/digital_twins/o5g/runTessla.sh"

if [ "$O5G_SETUP_GRAFANA" = "true" ]; then

  printf "Create Grafana datasource\n\n"

  source_uid=$(curl -X POST -H "Content-Type: application/json" -H "Authorization: Bearer $GRAFANA_TOKEN" -d "{\
    \"name\": \"o5g_influx\",\
    \"type\": \"influxdb\",\
    \"access\": \"proxy\",\
    \"url\": \"$O5G_INFLUX_SERVER\",\
    \"jsonData\": 
      { \"httpMode\":\"POST\",\
        \"organization\":\"$O5G_INFLUX_ORG\",\
        \"version\":\"Flux\"\
      },\
    \"secureJsonData\":{\
      \"token\":\"$O5G_INFLUX_TOKEN\"\
    }\
  }" "$O5G_GRAFANA_SERVER/api/datasources" | tee | jq -r '.datasource.uid')

  printf "Create Grafana visulization dashboard"

  data="{\
    \"dashboard\": {\
      \"id\": null,\
      \"title\": \"O5G mission control\",\
      \"tags\": [ \"templated\" ],\
      \"timezone\": \"browser\",\
    \"panels\": [\
      {\
        \"datasource\": {\
          \"type\": \"influxdb\",\
          \"uid\": \"$source_uid\"\
        },\
        \"fieldConfig\": {\
          \"defaults\": {\
            \"color\": {\
              \"mode\": \"palette-classic\"\
            },\
            \"custom\": {\
              \"axisCenteredZero\": false,\
              \"axisColorMode\": \"text\",\
              \"axisLabel\": \"\",\
              \"axisPlacement\": \"auto\",\
              \"barAlignment\": 0,\
              \"drawStyle\": \"points\",\
              \"fillOpacity\": 0,\
              \"gradientMode\": \"none\",\
              \"hideFrom\": {\
                \"legend\": false,\
                \"tooltip\": false,\
                \"viz\": false\
              },\
              \"lineInterpolation\": \"linear\",\
              \"lineWidth\": 1,\
              \"pointSize\": 5,\
              \"scaleDistribution\": {\
                \"type\": \"linear\"\
              },\
              \"showPoints\": \"auto\",\
              \"spanNulls\": false,\
              \"stacking\": {\
                \"group\": \"A\",\
                \"mode\": \"none\"\
              },\
              \"thresholdsStyle\": {\
                \"mode\": \"area\"\
              }\
            },\
            \"mappings\": [],\
            \"thresholds\": {\
              \"mode\": \"absolute\",\
              \"steps\": [\
                {\
                  \"color\": \"red\",\
                  \"value\": null\
                },\
                {\
                  \"color\": \"light-green\",\
                  \"value\": 2\
                }\
              ]\
            }\
          },\
          \"overrides\": []\
        },\
        \"gridPos\": {\
          \"h\": 17,\
          \"w\": 13,\
          \"x\": 0,\
          \"y\": 0\
        },\
        \"id\": 1,\
        \"options\": {\
          \"legend\": {\
            \"calcs\": [],\
            \"displayMode\": \"list\",\
            \"placement\": \"bottom\",\
            \"showLegend\": true\
          },\
          \"tooltip\": {\
            \"mode\": \"single\",\
            \"sort\": \"none\"\
          }\
        },\
        \"targets\": [\
          {\
            \"datasource\": {\
              \"type\": \"influxdb\",\
              \"uid\": \"$source_uid\"\
            },\
            \"query\": \"from(bucket: \\\"$O5G_INFLUX_BUCKET\\\")\\r\\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\\r\\n  |> filter(fn: (r) =>\\r\\n    r._measurement == \\\"prediction\\\" and\\r\\n    r._field == \\\"air-remaining\\\"\\r\\n  )\",\
            \"refId\": \"A\"\
          }\
        ],\
        \"title\": \"Panel Title\",\
        \"type\": \"timeseries\"\
      }\
    ],\
    \"overwrite\": false\
  }}"

  echo $data | curl -X POST -H "Content-Type: application/json" -H "Authorization: Bearer $O5G_GRAFANA_TOKEN" -d @- "$O5G_GRAFANA_SERVER/api/dashboards/db"

fi
printf "\n\nDone installing, use execute script to run digital twin \n"
